//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Scripts/GameInput/PlayerInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputActions"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""d306658a-4193-48a8-a473-4f02227b8131"",
            ""actions"": [
                {
                    ""name"": ""CameraMove"",
                    ""type"": ""Value"",
                    ""id"": ""1f3cee8b-fd4f-46fb-8d73-01b229548bfd"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""CameraZoom"",
                    ""type"": ""Value"",
                    ""id"": ""8025a366-eef0-4eeb-ac2e-bad077d54686"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""CameraRotateButton"",
                    ""type"": ""Button"",
                    ""id"": ""23ca688e-92b1-4b9d-9b37-474f6f090722"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UnitSelectionButton"",
                    ""type"": ""Button"",
                    ""id"": ""f69bb75f-fe11-42df-9709-7f8148cdb992"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MultiSelectionButton"",
                    ""type"": ""Button"",
                    ""id"": ""d10b2d45-47ca-4253-b62b-badcc42d2cb5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ActionButton"",
                    ""type"": ""Button"",
                    ""id"": ""f6e533f4-1024-443b-bd62-b91836648417"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""2f72121a-7277-4218-b6ff-5e6c0f543fd3"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraMove"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""97b266a3-ac0b-42b9-b1f7-49f41714bbb8"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""af74f6aa-0b48-4fe8-8767-ac9837a7c9cf"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""bbc594a1-9db1-4c75-955f-a90e4b13a234"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""dd4ee31f-1ae1-4cf9-8d2d-b22d173071bf"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""4d70bad3-e760-4aac-9ba1-12a8cf3b1368"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraZoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c6c77fb4-ae32-4923-8682-6e4ac8ad2706"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraRotateButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1d2b3c9c-8dbe-4919-bf7d-dc5c3cb83e7f"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UnitSelectionButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c50b0385-4a1d-494a-b3d9-d1231e4877bc"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MultiSelectionButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""215a8505-b8a6-417f-90a1-9c46c2c2affc"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ActionButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_CameraMove = m_Player.FindAction("CameraMove", throwIfNotFound: true);
        m_Player_CameraZoom = m_Player.FindAction("CameraZoom", throwIfNotFound: true);
        m_Player_CameraRotateButton = m_Player.FindAction("CameraRotateButton", throwIfNotFound: true);
        m_Player_UnitSelectionButton = m_Player.FindAction("UnitSelectionButton", throwIfNotFound: true);
        m_Player_MultiSelectionButton = m_Player.FindAction("MultiSelectionButton", throwIfNotFound: true);
        m_Player_ActionButton = m_Player.FindAction("ActionButton", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_CameraMove;
    private readonly InputAction m_Player_CameraZoom;
    private readonly InputAction m_Player_CameraRotateButton;
    private readonly InputAction m_Player_UnitSelectionButton;
    private readonly InputAction m_Player_MultiSelectionButton;
    private readonly InputAction m_Player_ActionButton;
    public struct PlayerActions
    {
        private @PlayerInputActions m_Wrapper;
        public PlayerActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @CameraMove => m_Wrapper.m_Player_CameraMove;
        public InputAction @CameraZoom => m_Wrapper.m_Player_CameraZoom;
        public InputAction @CameraRotateButton => m_Wrapper.m_Player_CameraRotateButton;
        public InputAction @UnitSelectionButton => m_Wrapper.m_Player_UnitSelectionButton;
        public InputAction @MultiSelectionButton => m_Wrapper.m_Player_MultiSelectionButton;
        public InputAction @ActionButton => m_Wrapper.m_Player_ActionButton;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @CameraMove.started += instance.OnCameraMove;
            @CameraMove.performed += instance.OnCameraMove;
            @CameraMove.canceled += instance.OnCameraMove;
            @CameraZoom.started += instance.OnCameraZoom;
            @CameraZoom.performed += instance.OnCameraZoom;
            @CameraZoom.canceled += instance.OnCameraZoom;
            @CameraRotateButton.started += instance.OnCameraRotateButton;
            @CameraRotateButton.performed += instance.OnCameraRotateButton;
            @CameraRotateButton.canceled += instance.OnCameraRotateButton;
            @UnitSelectionButton.started += instance.OnUnitSelectionButton;
            @UnitSelectionButton.performed += instance.OnUnitSelectionButton;
            @UnitSelectionButton.canceled += instance.OnUnitSelectionButton;
            @MultiSelectionButton.started += instance.OnMultiSelectionButton;
            @MultiSelectionButton.performed += instance.OnMultiSelectionButton;
            @MultiSelectionButton.canceled += instance.OnMultiSelectionButton;
            @ActionButton.started += instance.OnActionButton;
            @ActionButton.performed += instance.OnActionButton;
            @ActionButton.canceled += instance.OnActionButton;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @CameraMove.started -= instance.OnCameraMove;
            @CameraMove.performed -= instance.OnCameraMove;
            @CameraMove.canceled -= instance.OnCameraMove;
            @CameraZoom.started -= instance.OnCameraZoom;
            @CameraZoom.performed -= instance.OnCameraZoom;
            @CameraZoom.canceled -= instance.OnCameraZoom;
            @CameraRotateButton.started -= instance.OnCameraRotateButton;
            @CameraRotateButton.performed -= instance.OnCameraRotateButton;
            @CameraRotateButton.canceled -= instance.OnCameraRotateButton;
            @UnitSelectionButton.started -= instance.OnUnitSelectionButton;
            @UnitSelectionButton.performed -= instance.OnUnitSelectionButton;
            @UnitSelectionButton.canceled -= instance.OnUnitSelectionButton;
            @MultiSelectionButton.started -= instance.OnMultiSelectionButton;
            @MultiSelectionButton.performed -= instance.OnMultiSelectionButton;
            @MultiSelectionButton.canceled -= instance.OnMultiSelectionButton;
            @ActionButton.started -= instance.OnActionButton;
            @ActionButton.performed -= instance.OnActionButton;
            @ActionButton.canceled -= instance.OnActionButton;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);
    public interface IPlayerActions
    {
        void OnCameraMove(InputAction.CallbackContext context);
        void OnCameraZoom(InputAction.CallbackContext context);
        void OnCameraRotateButton(InputAction.CallbackContext context);
        void OnUnitSelectionButton(InputAction.CallbackContext context);
        void OnMultiSelectionButton(InputAction.CallbackContext context);
        void OnActionButton(InputAction.CallbackContext context);
    }
}
